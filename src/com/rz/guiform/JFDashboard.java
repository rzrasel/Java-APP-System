/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rz.guiform;

import java.awt.Component;
import java.awt.Container;
import java.awt.Dialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.AbstractButton;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 *
 * @author developer
 */
public class JFDashboard extends javax.swing.JFrame {

    public JFDashboard jFDashboard;

    /**
     * Creates new form jFDashboard
     */
    public JFDashboard() {
        initComponents();
        this.setTitle("Dashboard");
        jFDashboard = this;
        //this.setSize(150, 150);
        //this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        //this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                /*Frame02 frame2 = (Frame02) we.getWindow();
                jTextField1.setText(frame2.getText());
                toFront();
                jTextField1.requestFocusInWindow();*/
                //System.out.println("TEST_ON_CLOSE");
                JFLogin jFLogin = new JFLogin();
                jFLogin.setLocationRelativeTo(null);
                jFLogin.dispose();
                jFLogin.setUndecorated(true);
                jFLogin.setVisible(true);
                //jFLogin.requestFocus();
                //toFront();
                dispose();
            }
        });
        jBtnTest.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                //JFTestFrame jFTestFrame = new JFTestFrame();
                JFAppAddProjects jFAppAddProjects = new JFAppAddProjects();
                jFAppAddProjects.setLocationRelativeTo(jFDashboard);
                jFAppAddProjects.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                jFAppAddProjects.setResizable(false);
                //removeMinMaxClose(jFAppAddProjects);
                jFAppAddProjects.addWindowListener(getWindowAdapter(jFAppAddProjects));
                //frame.pack();
                ModalFrameUtil.showAsModal(jFAppAddProjects, jFDashboard);
                //jFAppAddProjects.setVisible(true);
                //jFTestFrame.setLocationRelativeTo(null);
                //jFDashboard.setEnabled(false);
                //jFTestFrame.setVisible(true);
                /*jFTestFrame.onSetParentWindow(jFDashboard);
                jFTestFrame.setLocationRelativeTo(null);
                //jFTestFrame.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
                jFTestFrame.setVisible(true);*/

                /*JDialog jd = new JDialog(jFTestFrame);
                jd.setModal(true);
                jd.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
                jd.setLocationByPlatform(true);
                jd.setLocationRelativeTo(jFTestFrame);
                //location = frame.getLocationOnScreen();
                //jd.setLocation(location);
                jd.pack();
                jd.setVisible(false);*/
            }
        });
    }

    private WindowAdapter getWindowAdapter(JFrame argJFrame) {
        return new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                super.windowClosing(we);
                //JOptionPane.showMessageDialog(frame, "Cant Exit");
            }

            @Override
            public void windowIconified(WindowEvent we) {
                argJFrame.setState(JFrame.NORMAL);
                //JOptionPane.showMessageDialog(frame, "Cant Minimize");
                System.out.println("CLICK_MIN_BUTTON");
            }
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtnTest = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dashboard");
        setName("JFDashboard"); // NOI18N

        jBtnTest.setText("Test");

        jMenu1.setText("File");

        jMenuItem1.setText("jMenuItem1");
        jMenu1.add(jMenuItem1);

        jMenu3.setText("jMenu3");
        jMenu1.add(jMenu3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jBtnTest)
                .addContainerGap(189, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jBtnTest)
                .addContainerGap(177, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new JFDashboard().setVisible(true);
                JFDashboard jFDashboard = new JFDashboard();
                jFDashboard.setVisible(true);
                /*jfDashboard.addWindowListener(new WindowAdapter() {
                    @Override
                    public void windowClosed(WindowEvent e) {
                        /*Frame02 frame2 = (Frame02) we.getWindow();
                        jTextField1.setText(frame2.getText());
                        toFront();
                        jTextField1.requestFocusInWindow();*--/
                        System.out.println("TEST_ON_CLOSE");
                        JFLogin jfLogin = new JFLogin();
                        jfLogin.setVisible(true);
                        jfLogin.toFront();
                        jfDashboard.dispose();
                    }
                });*/
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnTest;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    // End of variables declaration//GEN-END:variables
    public void removeMinMaxClose(Component comp) {
        if (comp instanceof AbstractButton) {
            comp.getParent().remove(comp);
        }
        if (comp instanceof Container) {
            Component[] comps = ((Container) comp).getComponents();
            for (int x = 0, y = comps.length; x < y; x++) {
                removeMinMaxClose(comps[x]);
            }
        }
    }
}
/*
http://www.java2s.com/Code/Java/Swing-JFC/Showthegivenframeasmodaltothespecifiedowner.htm
https://stackoverflow.com/questions/1481405/how-to-make-a-jframe-modal-in-swing-java
https://www.java-tips.org/java-se-tips-100019/15-javax-swing/1768-dialog-modality.html
http://tech.chitgoks.com/2013/05/22/how-to-create-modal-stage-window-from-a-jframe-in-java-fx-2/
http://tech.chitgoks.com/2013/07/08/how-to-create-confirm-dialog-window-in-java-fx-2/

Table Button Column
https://tips4java.wordpress.com/2009/07/12/table-button-column/
https://stackoverflow.com/questions/10347983/making-a-jbutton-clickable-inside-a-jtable
https://stackoverflow.com/questions/13833688/adding-jbutton-to-jtable
https://stackoverflow.com/questions/9321623/adding-button-to-jtable
Have a JButton cell in a JTable
http://esus.com/jbutton-cell-jtable/
 */
